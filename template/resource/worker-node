#------------------------------------------------------------------------------#
echo Sending shared config to $KWM_HOSTNAME.
#------------------------------------------------------------------------------#
$(files="cluster-ca-cert.pem cluster-ca-private-key.pem" \
  exec="$KWM_CONNECT" \
  basePath="$KWM_CONFIG_PATH_REMOTE" \
  sourcePath="$KWM_CONFIG_PATH_LOCAL" template util tar-copy
)
#------------------------------------------------------------------------------#
echo Installing $KWM_HOSTNAME.
#------------------------------------------------------------------------------#
$(exec="$KWM_CONNECT" content="
#------------------------------------------------------------------------------#
echo Generating private key for kublet.
#------------------------------------------------------------------------------#
$(basePath="$KWM_CONFIG_PATH_REMOTE" name="kubelet" template pki private-key)
#------------------------------------------------------------------------------#
echo Generating private key for kube-router.
#------------------------------------------------------------------------------#
$(basePath="$KWM_CONFIG_PATH_REMOTE" name="kube-router" template pki private-key)
#------------------------------------------------------------------------------#
echo Generating cluster-ca signed certificate for kubelet to apiserver communication.
#------------------------------------------------------------------------------#
$(name="kubelet" \
  basePath="$KWM_CONFIG_PATH_REMOTE" \
  subj="/CN=system:node:$KWM_HOSTNAME/O=system:nodes" \
  ext="subjectAltName = IP:$KWM_PRIVATE_IP,DNS:$KWM_HOSTNAME" \
  ca="cluster" template pki signed-cert)
#------------------------------------------------------------------------------#
echo Generating cluster-ca signed certificate for kube-router to apiserver communication.
#------------------------------------------------------------------------------#
$(name="kube-router" \
  basePath="$KWM_CONFIG_PATH_REMOTE" \
  subj="/CN=kube-router" \
  ca="cluster" template pki signed-cert)
#------------------------------------------------------------------------------#
echo Ensuring hostname and loopback reference are set.
#------------------------------------------------------------------------------#
$(name="$KWM_HOSTNAME" template util set-hostname)
#------------------------------------------------------------------------------#
echo Generating CNI network configuration.
#------------------------------------------------------------------------------#
$(content='{ "cniVersion": "0.3.1", "type": "loopback" }' \
  path="/etc/cni/net.d/99-loopback.conf" template util write-file
)
$(content='{"name": "kubernetes", "type": "bridge", "bridge": "kube-bridge", "ipam": { "type": "host-local" }, "isDefaultGateway": true }' \
  path="/etc/cni/net.d/10-kuberouter.conf" template util write-file
)
#------------------------------------------------------------------------------#
echo Installing cri-containerd.
#------------------------------------------------------------------------------#
$(version="$KWM_VERSION_CRI_CONTAINERD" template installer cri-containerd)
$(name="containerd" template service enable)
$(name="cri-containerd" template service enable)
#------------------------------------------------------------------------------#
echo Installing container networking plugins at version $KWM_VERSION_CNI_PLUGIN.
#------------------------------------------------------------------------------#
$(version="$KWM_VERSION_CNI_PLUGIN" template installer cni-plugins)
#------------------------------------------------------------------------------#
echo Generating kubelet config.
#------------------------------------------------------------------------------#
$(path="$KWM_CONFIG_PATH_REMOTE/kubelet.kubeconfig" \
  content="$(
    name="kubelet" \
    user="system:node:$KWM_HOSTNAME" \
    clusterName="$KWM_CLUSTER_NAME" \
    apiserver="$KWM_APISERVER_PRIVATE_IP" \
    configPath="$KWM_CONFIG_PATH_REMOTE" template resource kubeconfig-manifest
  )" template util write-file
)
#------------------------------------------------------------------------------#
echo Generating kube-router config.
#------------------------------------------------------------------------------#
$(path="$KWM_CONFIG_PATH_REMOTE/kube-router.kubeconfig" \
  content="$(
    name="kube-router" \
    user="kube-router" \
    clusterName="$KWM_CLUSTER_NAME" \
    apiserver="$KWM_APISERVER_PRIVATE_IP" \
    configPath="$KWM_CONFIG_PATH_REMOTE" template resource kubeconfig-manifest
  )" template util write-file
)
#------------------------------------------------------------------------------#
echo Installing kubelet at version $KWM_VERSION_KUBERNETES.
#------------------------------------------------------------------------------#
$(name="kubelet" version="$KWM_VERSION_KUBERNETES" template installer k8s)
#------------------------------------------------------------------------------#
echo Generating kubelet service.
#------------------------------------------------------------------------------#
$(path="/etc/systemd/system/kubelet.service" content="
  $(name="kubelet" \
    after="cri-containerd.service" \
    requires="cri-containerd.service" \
    roles=$KWM_ROLE \
    exec="$(
      configPath="$KWM_CONFIG_PATH_REMOTE" \
      privateIp="$KWM_PRIVATE_IP" \
      clusterDns="$KWM_DNS_SERVICE_IP" \
      podCidr="$KWM_POD_CIDR" template service kubelet
    )" template service unit
)" template util write-file)
#------------------------------------------------------------------------------#
echo Enabling and restarting service.
#------------------------------------------------------------------------------#
$(name="kubelet" template service enable)
#------------------------------------------------------------------------------#
echo Installing socat to power kubectl proxy.
#------------------------------------------------------------------------------#
$(template installer socat)

" template util remote-script)
