#------------------------------------------------------------------------------#
echo Sending shared PKI to $KWM_HOSTNAME.
#------------------------------------------------------------------------------#
$(files="cluster-ca-cert.pem cluster-ca-private-key.pem etcd-ca-cert.pem etcd-ca-private-key.pem apiserver-to-etcd-cert.pem apiserver-to-etcd-private-key.pem service-account-private-key.pem service-account-public-key.pem" \
  exec="$KWM_CONNECT" \
  basePath="$KWM_CONFIG_PATH_REMOTE" \
  sourcePath="$KWM_CONFIG_PATH_LOCAL" template util tar-copy
)
#------------------------------------------------------------------------------#
echo Installing $KWM_HOSTNAME.
#------------------------------------------------------------------------------#
$(exec="$KWM_CONNECT" content="
#------------------------------------------------------------------------------#
echo Generating private key for client to apiserver communication.
#------------------------------------------------------------------------------#
$(basePath="$KWM_CONFIG_PATH_REMOTE" name="client-to-apiserver" template pki private-key)
#------------------------------------------------------------------------------#
echo Generating private key for apiserver to kubelet communication.
#------------------------------------------------------------------------------#
$(basePath="$KWM_CONFIG_PATH_REMOTE" name="apiserver-to-kubelet" template pki private-key)
#------------------------------------------------------------------------------#
echo Generating cluster-ca signed certificate for client to apiserver communication.
#------------------------------------------------------------------------------#
$(name="client-to-apiserver" \
  basePath="$KWM_CONFIG_PATH_REMOTE" \
  subj="/CN=kube-apiserver" \
  ext="subjectAltName = IP:$KWM_APISERVER_PUBLIC_IP,IP:$KWM_KUBERNETES_SERVICE_IP,IP:$KWM_PRIVATE_IP,DNS:$KWM_HOSTNAME,DNS:kubernetes,DNS:kubernetes.default,DNS:kubernetes.default.svc,DNS:kubernetes.default.svc.cluster,DNS:kubernetes.default.svc.cluster.local" \
  ca="cluster" template pki signed-cert
)
#------------------------------------------------------------------------------#
echo Generating cluster-ca signed certificate for apiserver to kubelet communication.
#------------------------------------------------------------------------------#
$(name="apiserver-to-kubelet" \
  basePath="$KWM_CONFIG_PATH_REMOTE" \
  subj="/CN=kube-apiserver-client/O=system:masters" \
  ca="cluster" template pki signed-cert
)
#------------------------------------------------------------------------------#
echo Ensuring hostname and loopback reference are set.
#------------------------------------------------------------------------------#
$(name="$KWM_HOSTNAME" template util set-hostname)
#------------------------------------------------------------------------------#
echo Installing kube-apiserver at version $KWM_VERSION_KUBERNETES.
#------------------------------------------------------------------------------#
$(version="$KWM_VERSION_KUBERNETES" name="kube-apiserver" template installer k8s)
#------------------------------------------------------------------------------#
echo Generating kube-apiserver service file.
#------------------------------------------------------------------------------#
$(path="/etc/systemd/system/kube-apiserver.service" content="$(
  name="kube-apiserver" \
  after="network.target" \
  exec="$(
    count="1" \
    configPath="$KWM_CONFIG_PATH_REMOTE" \
    privateIp="$KWM_PRIVATE_IP" \
    serviceCidr="$KWM_SERVICE_CIDR" \
    etcdServers="$KWM_ETCD_SERVERS" template service kube-apiserver
  )" template service unit)" template util write-file
)
#------------------------------------------------------------------------------#
echo Enabling kube-apiserver service.
#------------------------------------------------------------------------------#
$(name="kube-apiserver" template service enable)
#------------------------------------------------------------------------------#
echo Installing kube-controller-manager at version $KWM_VERSION_KUBERNETES.
#------------------------------------------------------------------------------#
$(version="$KWM_VERSION_KUBERNETES" name="kube-controller-manager" template installer k8s)
#------------------------------------------------------------------------------#
echo Generating kube-controller service file.
#------------------------------------------------------------------------------#
$(path="/etc/systemd/system/kube-controller-manager.service" content="$(
  name="kube-controller-manager" \
  after="network.target" \
  requires="" \
  exec="$(
    configPath="$KWM_CONFIG_PATH_REMOTE" \
    clusterName="$KWM_CLUSTER_NAME" \
    serviceCidr="$KWM_SERVICE_CIDR" \
    podCidr="$KWM_POD_CIDR" \
    template service kube-controller-manager
  )" template service unit)" template util write-file
)
#------------------------------------------------------------------------------#
echo Enabling kube-controller-manager service.
#------------------------------------------------------------------------------#
$(name="kube-controller-manager" template service enable)
#------------------------------------------------------------------------------#
echo Installing kube-scheduler at version $KWM_VERSION_KUBERNETES.
#------------------------------------------------------------------------------#
$(version="$KWM_VERSION_KUBERNETES" name="kube-scheduler" template installer k8s)
#------------------------------------------------------------------------------#
echo Generating kube-scheduler service file.
#------------------------------------------------------------------------------#
$(path="/etc/systemd/system/kube-scheduler.service" content="$(
  name="kube-scheduler" \
  after="network.target" \
  requires="" \
  exec="$(template service kube-scheduler)" template service unit)" template util write-file
)
#------------------------------------------------------------------------------#
echo Enabling kube-scheduler service.
#------------------------------------------------------------------------------#
$(version="$KWM_VERSION_KUBERNETES" name="kube-scheduler" template service enable)
#------------------------------------------------------------------------------#
echo Installing kubectl at version $KWM_VERSION_KUBERNETES.
#------------------------------------------------------------------------------#
$(version="$KWM_VERSION_KUBERNETES" name="kubectl" template installer k8s)

" template util remote-script)
