# Show all variables in your current environment.
printenv

# Display one variable using printenv.
printenv HOME

# Display one variable using echo.
echo \$HOME

# Set the value of MESSAGE for the duration of one command
MESSAGE=hello printenv MESSAGE

# Show that MESSAGE is no longer set
echo \$MESSAGE

# Export MESSAGE, making it available to all commands in the current session
export MESSAGE=hello

# Confirm that MESSAGE is still available.
echo \$MESSAGE

# Open a new terminal session and confirm that MESSAGE was not persisted to it.
echo \$MESSAGE

# Save environment variables to a file.
cat > settings <<EOF
export SETTING_ONE=one
export SETTING_TWO=two
EOF

# "Source" the file you created into your shell.
. ./settings

# Confirm the variables are now available in your environment
echo \$SETTING_ONE
echo \$SETTING_TWO

# Unset a variable, removing it from your environment
unset \$SETTING_ONE
echo \$SETTING_ONE

# Now try this with KWM!
#
# It can tell you what environment variables are needed to render commands
# for your cluster. Let's see what is required to generate your public key
# infrastructure:
kwm env pki

# You should see that some values are missing. Try supplying one
KWM_CLUSTER_NAME=workshop kwm env pki

# Now provide all of them, and render the commands
export KWM_CLUSTER_NAME=workshop
export KWM_APISERVER_PUBLIC_IP=55.55.55.55
export KWM_ETCD_CLIENT_SANS=IP:55.55.55.55

# Now render and inspect the script
kwm render pki

# If it looks good, run it!
kwm render pki | bash
