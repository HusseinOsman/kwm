#------------------------------------------------------------------------------#
echo Configuring your PKI.
#------------------------------------------------------------------------------#
kwm render pki | bash 2>&1 | sed 's/^/[public key infrastructure] /'
#------------------------------------------------------------------------------#
echo Configure your kubectl for cluster admin access
#------------------------------------------------------------------------------#
kwm render cluster-admin | bash 2>&1 | sed 's/^/[getting admin to cluster] /'
#------------------------------------------------------------------------------#
echo Configuring your nodes.
#------------------------------------------------------------------------------#
kwm nodes etcd | xargs -n1 kwm render etcd-node | bash 2>&1 | sed 's/^/[etcd] /'
kwm nodes controlplane | xargs -n1 kwm render controlplane-node | bash 2>&1 | sed 's/^/[controlplane] /'
kwm nodes worker | xargs -n1 kwm render worker-node | bash 2>&1 | sed 's/^/[worker] /'
#------------------------------------------------------------------------------#
echo Installing a container networking plugin.
#------------------------------------------------------------------------------#
mkdir -p manifests/system
kwm render cni-manifest > manifests/system/cni.yml
kubectl --context=${KWM_CLUSTER_NAME} apply -f manifests/system/cni.yml | sed 's/^/[container networking] /'
echo Waiting for container networking to start...
#------------------------------------------------------------------------------#
echo HACK bouncing containerd to pick up cni settings from above.
#------------------------------------------------------------------------------#
sleep 30
((kwm nodes controlplane && kwm nodes worker) | uniq | \
  xargs -n1 -I {} bash -c "echo 'sudo systemctl restart containerd' | kwm connect {}"
) 2>&1 | sed 's/^/[hack] /'
#------------------------------------------------------------------------------#
echo Installing kube-dns.
#------------------------------------------------------------------------------#
mkdir -p manifests/system
kwm render dns-manifest > manifests/system/kube-dns.yml
kubectl --context=${KWM_CLUSTER_NAME} apply -f manifests/system/kube-dns.yml | sed 's/^/[cluster dns] /'
echo Waiting for kube-dns to start...
#------------------------------------------------------------------------------#
echo Confirming the cluster is functional.
#------------------------------------------------------------------------------#
sleep 30
kubectl --context=${KWM_CLUSTER_NAME} get componentstatus
kubectl --context=${KWM_CLUSTER_NAME} get nodes -o wide
kubectl --context=${KWM_CLUSTER_NAME} get pods -o wide --all-namespaces
