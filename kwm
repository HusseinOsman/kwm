#!/usr/bin/env bash
# Kubernetes Without Magic
#
# MIT License
#
# Copyright (c) 2018 Authors of Kubernetes Without Magic
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

set -euo pipefail

export VERSION=dev

# Controls whether or not KWM will look to disk for templates.
export TEMPLATES_BUNDLED=false

# Set some defaults.
export KWM_POD_CIDR=${KWM_POD_CIDR:-10.1.0.0/16}
export KWM_SERVICE_CIDR=${KWM_SERVICE_CIDR:-10.10.0.0/24}
export KWM_KUBERNETES_SERVICE_IP=${KWM_KUBERNETES_SERVICE_IP:-10.10.0.1}
export KWM_DNS_SERVICE_IP=${KWM_DNS_SERVICE_IP:-10.10.0.2}
export KWM_CONFIG_PATH_REMOTE=${KWM_CONFIG_PATH_REMOTE:-/etc/kubernetes}
export KWM_CONFIG_PATH_LOCAL=${KWM_CONFIG_PATH_LOCAL:-assets}
export KWM_VERSION_ETCD=${KWM_VERSION_ETCD:-3.3.4}
export KWM_VERSION_KUBERNETES=${KWM_VERSION_KUBERNETES:-1.10.2}
export KWM_VERSION_COREDNS=${KWM_VERSION_COREDNS:-1.1.2}
export KWM_VERSION_CNI_PLUGIN=${KWM_VERSION_CNI_PLUGIN:-0.7.1}
export KWM_VERSION_CONTAINERD=${KWM_VERSION_CONTAINERD:-1.1.0}
export KWM_VERSION_RUNC=${KWM_VERSION_RUNC:-1.0.0-rc5}
export KWM_VERSION_KUBE_ROUTER=${KWM_VERSION_KUBE_ROUTER:-0.2.0-beta.4}

# Get an absolute path to KWM itself.
export BASE_PATH="$(cd "$(dirname "$0")"; pwd -P)/"

# Get the name of KWM, just in case it has been changed.
export SCRIPT_NAME="$(basename -- "$0")"

# Many commands highlight user supplied input with coloring. This variable is
# used to control instances where colors should not be applied. For example,
# a user may run `kwm render assets` to inspect the commands needed to generate
# PKI for Kubernetes. If they actually want to execute those commands, as in
# `kwm render assets | bash`, the highlighting of their values should not be
# present.
if [[ ! -t 1 ]]; then
  export STDOUT_IS_TERMINAL=false
else
  export STDOUT_IS_TERMINAL=true
fi

# A convenience flag that allows users to generate invalid resources by
# providing partially complete environment values. This makes it easy to
# explore where individual enviroment values wind up.
export IGNORE_MISSING_ENV=false
case "$@" in
  *--ignore-missing-env*) export IGNORE_MISSING_ENV=true ;;
esac

. ${BASE_PATH}src/connect.sh
. ${BASE_PATH}src/define.sh
. ${BASE_PATH}src/env.sh
. ${BASE_PATH}src/help.sh
. ${BASE_PATH}src/installer.sh
. ${BASE_PATH}src/nodes.sh
. ${BASE_PATH}src/render.sh
. ${BASE_PATH}src/start.sh
. ${BASE_PATH}src/unsetter.sh
. ${BASE_PATH}src/usage.sh
. ${BASE_PATH}src/version.sh
. ${BASE_PATH}src/workshop.sh

# Wire command line arguments to method calls in the script.
main() {
  local command=${1:-usage}
  if [[ $command == connect ]]; then connect ${@:2}; fi
  if [[ $command == define ]]; then define ${@:2}; fi
  if [[ $command == env ]]; then getenv ${@:2}; fi
  if [[ $command == help ]]; then help ${@:2}; fi
  if [[ $command == nodes ]]; then nodes ${@:2}; fi
  if [[ $command == install ]]; then installer; fi
  if [[ $command == render ]]; then render ${@:2}; fi
  if [[ $command == start ]]; then start; fi
  if [[ $command == unset ]]; then unsetter; fi
  if [[ $command == version ]]; then version; fi
  if [[ $command == workshop ]]; then workshop ${@:2}; fi
  usage
}

# Kick off KWM, removing any command line flags from the argument listing.
main $(sed 's/ --ignore-missing-env//g' <<< "$@")
